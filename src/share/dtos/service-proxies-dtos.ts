//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.19.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

/* tslint:disable */
/* eslint-disable */
// ReSharper disable InconsistentNaming



export class CarDTO implements ICarDTO {
    carId?: string;
    carName?: string | undefined;
    carModel?: string | undefined;
    carClass?: string | undefined;
    carEngine?: string | undefined;
    carAmount?: number;
    carPrice?: number;
    moTa?: string | undefined;
    head1?: string | undefined;
    moTa2?: string | undefined;

    constructor(data?: ICarDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.carId = _data["carId"];
            this.carName = _data["carName"];
            this.carModel = _data["carModel"];
            this.carClass = _data["carClass"];
            this.carEngine = _data["carEngine"];
            this.carAmount = _data["carAmount"];
            this.carPrice = _data["carPrice"];
            this.moTa = _data["moTa"];
            this.head1 = _data["head1"];
            this.moTa2 = _data["moTa2"];
        }
    }

    static fromJS(data: any): CarDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CarDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["carId"] = this.carId;
        data["carName"] = this.carName;
        data["carModel"] = this.carModel;
        data["carClass"] = this.carClass;
        data["carEngine"] = this.carEngine;
        data["carAmount"] = this.carAmount;
        data["carPrice"] = this.carPrice;
        data["moTa"] = this.moTa;
        data["head1"] = this.head1;
        data["moTa2"] = this.moTa2;
        return data;
    }
}

export interface ICarDTO {
    carId?: string;
    carName?: string | undefined;
    carModel?: string | undefined;
    carClass?: string | undefined;
    carEngine?: string | undefined;
    carAmount?: number;
    carPrice?: number;
    moTa?: string | undefined;
    head1?: string | undefined;
    moTa2?: string | undefined;
}

export class CarDetailDTO implements ICarDetailDTO {
    detailId?: string;
    carId?: string;
    head1?: string | undefined;
    title1?: string | undefined;
    head2?: string | undefined;
    title2?: string | undefined;
    head3?: string | undefined;
    title3?: string | undefined;

    constructor(data?: ICarDetailDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.detailId = _data["detailId"];
            this.carId = _data["carId"];
            this.head1 = _data["head1"];
            this.title1 = _data["title1"];
            this.head2 = _data["head2"];
            this.title2 = _data["title2"];
            this.head3 = _data["head3"];
            this.title3 = _data["title3"];
        }
    }

    static fromJS(data: any): CarDetailDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CarDetailDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["detailId"] = this.detailId;
        data["carId"] = this.carId;
        data["head1"] = this.head1;
        data["title1"] = this.title1;
        data["head2"] = this.head2;
        data["title2"] = this.title2;
        data["head3"] = this.head3;
        data["title3"] = this.title3;
        return data;
    }
}

export interface ICarDetailDTO {
    detailId?: string;
    carId?: string;
    head1?: string | undefined;
    title1?: string | undefined;
    head2?: string | undefined;
    title2?: string | undefined;
    head3?: string | undefined;
    title3?: string | undefined;
}

export class CartDTO implements ICartDTO {
    cartId?: string;
    customerId?: string;
    carId?: string;
    amount?: number | undefined;
    price?: number | undefined;

    constructor(data?: ICartDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.cartId = _data["cartId"];
            this.customerId = _data["customerId"];
            this.carId = _data["carId"];
            this.amount = _data["amount"];
            this.price = _data["price"];
        }
    }

    static fromJS(data: any): CartDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CartDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["cartId"] = this.cartId;
        data["customerId"] = this.customerId;
        data["carId"] = this.carId;
        data["amount"] = this.amount;
        data["price"] = this.price;
        return data;
    }
}

export interface ICartDTO {
    cartId?: string;
    customerId?: string;
    carId?: string;
    amount?: number | undefined;
    price?: number | undefined;
}

export class CartNotiDTO implements ICartNotiDTO {
    carName?: string | undefined;
    amount?: number;
    price?: number;

    constructor(data?: ICartNotiDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.carName = _data["carName"];
            this.amount = _data["amount"];
            this.price = _data["price"];
        }
    }

    static fromJS(data: any): CartNotiDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CartNotiDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["carName"] = this.carName;
        data["amount"] = this.amount;
        data["price"] = this.price;
        return data;
    }
}

export interface ICartNotiDTO {
    carName?: string | undefined;
    amount?: number;
    price?: number;
}

export class ChangeInfoDTO implements IChangeInfoDTO {
    customerName?: string | undefined;
    customerPhone?: string | undefined;
    customerAddress?: string | undefined;
    customerDate?: Date;
    customerLicense?: string | undefined;
    customerEmail?: string | undefined;

    constructor(data?: IChangeInfoDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.customerName = _data["customerName"];
            this.customerPhone = _data["customerPhone"];
            this.customerAddress = _data["customerAddress"];
            this.customerDate = _data["customerDate"] ? new Date(_data["customerDate"].toString()) : <any>undefined;
            this.customerLicense = _data["customerLicense"];
            this.customerEmail = _data["customerEmail"];
        }
    }

    static fromJS(data: any): ChangeInfoDTO {
        data = typeof data === 'object' ? data : {};
        let result = new ChangeInfoDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["customerName"] = this.customerName;
        data["customerPhone"] = this.customerPhone;
        data["customerAddress"] = this.customerAddress;
        data["customerDate"] = this.customerDate ? this.customerDate.toISOString() : <any>undefined;
        data["customerLicense"] = this.customerLicense;
        data["customerEmail"] = this.customerEmail;
        return data;
    }
}

export interface IChangeInfoDTO {
    customerName?: string | undefined;
    customerPhone?: string | undefined;
    customerAddress?: string | undefined;
    customerDate?: Date;
    customerLicense?: string | undefined;
    customerEmail?: string | undefined;
}

export class ChangePasswordDTO implements IChangePasswordDTO {
    oldPassword?: string | undefined;
    newPassword?: string | undefined;

    constructor(data?: IChangePasswordDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.oldPassword = _data["oldPassword"];
            this.newPassword = _data["newPassword"];
        }
    }

    static fromJS(data: any): ChangePasswordDTO {
        data = typeof data === 'object' ? data : {};
        let result = new ChangePasswordDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["oldPassword"] = this.oldPassword;
        data["newPassword"] = this.newPassword;
        return data;
    }
}

export interface IChangePasswordDTO {
    oldPassword?: string | undefined;
    newPassword?: string | undefined;
}

export class CustomerCartDTO implements ICustomerCartDTO {
    totalAmount?: number | undefined;
    totalDiscount?: number | undefined;

    constructor(data?: ICustomerCartDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.totalAmount = _data["totalAmount"];
            this.totalDiscount = _data["totalDiscount"];
        }
    }

    static fromJS(data: any): CustomerCartDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CustomerCartDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["totalAmount"] = this.totalAmount;
        data["totalDiscount"] = this.totalDiscount;
        return data;
    }
}

export interface ICustomerCartDTO {
    totalAmount?: number | undefined;
    totalDiscount?: number | undefined;
}

export class CustomerCreateDTO implements ICustomerCreateDTO {
    customerName?: string | undefined;
    customerEmail?: string | undefined;
    customerPassword?: string | undefined;

    constructor(data?: ICustomerCreateDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.customerName = _data["customerName"];
            this.customerEmail = _data["customerEmail"];
            this.customerPassword = _data["customerPassword"];
        }
    }

    static fromJS(data: any): CustomerCreateDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CustomerCreateDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["customerName"] = this.customerName;
        data["customerEmail"] = this.customerEmail;
        data["customerPassword"] = this.customerPassword;
        return data;
    }
}

export interface ICustomerCreateDTO {
    customerName?: string | undefined;
    customerEmail?: string | undefined;
    customerPassword?: string | undefined;
}

export class CustomerDTO implements ICustomerDTO {
    customerId?: string;
    customerName?: string | undefined;
    customerPhone?: string | undefined;
    customerAddress?: string | undefined;
    customerDate?: Date;
    customerLicense?: string | undefined;
    customerEmail?: string | undefined;
    customerPassword?: string | undefined;

    constructor(data?: ICustomerDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.customerId = _data["customerId"];
            this.customerName = _data["customerName"];
            this.customerPhone = _data["customerPhone"];
            this.customerAddress = _data["customerAddress"];
            this.customerDate = _data["customerDate"] ? new Date(_data["customerDate"].toString()) : <any>undefined;
            this.customerLicense = _data["customerLicense"];
            this.customerEmail = _data["customerEmail"];
            this.customerPassword = _data["customerPassword"];
        }
    }

    static fromJS(data: any): CustomerDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CustomerDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["customerId"] = this.customerId;
        data["customerName"] = this.customerName;
        data["customerPhone"] = this.customerPhone;
        data["customerAddress"] = this.customerAddress;
        data["customerDate"] = this.customerDate ? this.customerDate.toISOString() : <any>undefined;
        data["customerLicense"] = this.customerLicense;
        data["customerEmail"] = this.customerEmail;
        data["customerPassword"] = this.customerPassword;
        return data;
    }
}

export interface ICustomerDTO {
    customerId?: string;
    customerName?: string | undefined;
    customerPhone?: string | undefined;
    customerAddress?: string | undefined;
    customerDate?: Date;
    customerLicense?: string | undefined;
    customerEmail?: string | undefined;
    customerPassword?: string | undefined;
}

export class CustomerLoginDTO implements ICustomerLoginDTO {
    email?: string | undefined;
    password?: string | undefined;
    admin?: boolean | undefined;

    constructor(data?: ICustomerLoginDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.email = _data["email"];
            this.password = _data["password"];
            this.admin = _data["admin"];
        }
    }

    static fromJS(data: any): CustomerLoginDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CustomerLoginDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["email"] = this.email;
        data["password"] = this.password;
        data["admin"] = this.admin;
        return data;
    }
}

export interface ICustomerLoginDTO {
    email?: string | undefined;
    password?: string | undefined;
    admin?: boolean | undefined;
}

export class CustomerTokenDTO implements ICustomerTokenDTO {
    token?: string | undefined;
    id?: string;
    email?: string | undefined;
    name?: string | undefined;
    password?: string | undefined;
    admin?: boolean | undefined;

    constructor(data?: ICustomerTokenDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.token = _data["token"];
            this.id = _data["id"];
            this.email = _data["email"];
            this.name = _data["name"];
            this.password = _data["password"];
            this.admin = _data["admin"];
        }
    }

    static fromJS(data: any): CustomerTokenDTO {
        data = typeof data === 'object' ? data : {};
        let result = new CustomerTokenDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["token"] = this.token;
        data["id"] = this.id;
        data["email"] = this.email;
        data["name"] = this.name;
        data["password"] = this.password;
        data["admin"] = this.admin;
        return data;
    }
}

export interface ICustomerTokenDTO {
    token?: string | undefined;
    id?: string;
    email?: string | undefined;
    name?: string | undefined;
    password?: string | undefined;
    admin?: boolean | undefined;
}

export class OrderDTO implements IOrderDTO {
    orderId?: string;
    carId?: string;
    orderDate?: Date;
    orderStatus?: string | undefined;
    amount?: number;
    totalPrice?: number;
    customerId?: string;

    constructor(data?: IOrderDTO) {
        if (data) {
            for (var property in data) {
                if (data.hasOwnProperty(property))
                    (<any>this)[property] = (<any>data)[property];
            }
        }
    }

    init(_data?: any) {
        if (_data) {
            this.orderId = _data["orderId"];
            this.carId = _data["carId"];
            this.orderDate = _data["orderDate"] ? new Date(_data["orderDate"].toString()) : <any>undefined;
            this.orderStatus = _data["orderStatus"];
            this.amount = _data["amount"];
            this.totalPrice = _data["totalPrice"];
            this.customerId = _data["customerId"];
        }
    }

    static fromJS(data: any): OrderDTO {
        data = typeof data === 'object' ? data : {};
        let result = new OrderDTO();
        result.init(data);
        return result;
    }

    toJSON(data?: any) {
        data = typeof data === 'object' ? data : {};
        data["orderId"] = this.orderId;
        data["carId"] = this.carId;
        data["orderDate"] = this.orderDate ? this.orderDate.toISOString() : <any>undefined;
        data["orderStatus"] = this.orderStatus;
        data["amount"] = this.amount;
        data["totalPrice"] = this.totalPrice;
        data["customerId"] = this.customerId;
        return data;
    }
}

export interface IOrderDTO {
    orderId?: string;
    carId?: string;
    orderDate?: Date;
    orderStatus?: string | undefined;
    amount?: number;
    totalPrice?: number;
    customerId?: string;
}